{"version":3,"file":"static/js/250.8b4eeb07.chunk.js","mappings":"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","sources":["components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Form/Form.styled.jsx","components/Form/Form.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ListContact = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n\n  gap: 13px;\n`;\n\nexport const ListContactItem = styled.li`\n  display: flex;\n\n  align-items: center;\n  justify-content: space-between;\n  gap: 25px;\n\n  padding: 15px 25px;\n\n  border: 2px solid ${({ theme }) => theme.colors.prymeryColor};\n  border-radius: 6px;\n\n  background-color: rgba(227, 226, 226, 0.518);\n`;\n\nexport const ListContactInfo = styled.p`\n  margin-bottom: 0;\n\n  font-size: 20px;\n`;\n\nexport const ListRemoveBtn = styled.button`\n  padding: 10px 25px;\n\n  border-radius: 10px;\n\n  background-color: ${({ theme }) => theme.colors.white};\n\n  font-size: 15px;\n  font-weight: 700;\n\n  transition: background-color 250ms linear;\n\n  :hover,\n  :focus {\n    background-color: ${({ theme }) => theme.colors.prymeryColor};\n\n    color: ${({ theme }) => theme.colors.white};\n\n    transition: background-color 250ms linear;\n  }\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  ListContact,\n  ListContactItem,\n  ListContactInfo,\n  ListRemoveBtn,\n} from './ContactList.styled';\nimport {\n  contactsSelector,\n  filterSelector,\n  selectIsLoading,\n} from 'redux/selectors';\nimport { deleteContact, fetchContacts } from 'redux/operations';\n\nconst ConatctList = () => {\n  const contacts = useSelector(contactsSelector);\n  const filters = useSelector(filterSelector);\n  const isLoad = useSelector(selectIsLoading);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const filtredListContact = contacts.filter(contact =>\n    contact.name.toLocaleLowerCase().includes(filters.toLocaleLowerCase())\n  );\n  return (\n    <>\n      {isLoad ? (\n        <h2>please wait loading...</h2>\n      ) : (\n        <ListContact>\n          {filtredListContact.map(contact => (\n            <ListContactItem key={contact.id}>\n              <ListContactInfo>\n                {contact.name}: {contact.number}\n              </ListContactInfo>\n              <ListRemoveBtn\n                type=\"button\"\n                onClick={() => dispatch(deleteContact(contact.id))}\n              >\n                remove\n              </ListRemoveBtn>\n            </ListContactItem>\n          ))}\n        </ListContact>\n      )}\n    </>\n  );\n};\nexport default ConatctList;\n","import styled from '@emotion/styled';\n\nexport const Fiterlable = styled.label`\n  font-size: 18px;\n  font-weight: 600;\n  margin-right: 15px;\n`;\nexport const FilterInput = styled.input`\n  padding: 10px 15px;\n\n  border-radius: 10px;\n  border-color: ${({ theme }) => theme.colors.prymeryBgColor};\n  outline: none;\n\n  font-size: 19px;\n\n  width: 200px;\n  transition: background-color 250ms linear;\n\n  :focus {\n    border-color: ${({ theme }) => theme.colors.accentColor};\n    background-color: rgba(0, 0, 0, 0.8);\n    color: ${({ theme }) => theme.colors.white};\n    transition: background-color 250ms linear;\n  }\n`;\n\nexport const BlockLable = styled.div`\n  margin-bottom: 30px;\n`;\n","import { Fiterlable, FilterInput, BlockLable } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filtred } from 'redux/Slices/FilterSlice';\nimport { filterSelector } from 'redux/selectors';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(filterSelector);\n\n  const filtarValue = ({ target }) => {\n    dispatch(filtred(target.value));\n  };\n\n  return (\n    <BlockLable>\n      <Fiterlable htmlFor=\"filter\">Find contacts by name</Fiterlable>\n      <FilterInput\n        type=\"text\"\n        value={filter}\n        onChange={filtarValue}\n        id=\"filter\"\n      />\n    </BlockLable>\n  );\n};\nexport default Filter;\n","import styled from '@emotion/styled';\n\nexport const FormPhonebook = styled.form`\n  display: flex;\n  flex-direction: column;\n\n  gap: 15px;\n`;\n\nexport const FormInput = styled.input`\n  padding: 10px 15px;\n\n  border-radius: 10px;\n  border-color: ${({ theme }) => theme.colors.prymeryBgColor};\n  outline: none;\n\n  font-size: 19px;\n\n  width: 400px;\n  transition: background-color 250ms linear;\n\n  :focus {\n    border-color: ${({ theme }) => theme.colors.accentColor};\n    background-color: rgba(0, 0, 0, 0.8);\n    color: ${({ theme }) => theme.colors.white};\n    transition: background-color 250ms linear;\n  }\n`;\n\nexport const FormLeable = styled.label`\n  font-size: 18px;\n  font-weight: 600;\n`;\nexport const FormButtonSubmit = styled.button`\n  width: 200px;\n\n  padding: 10px 15px;\n\n  font-size: 19px;\n  font-weight: 700;\n\n  border-radius: 6px;\n\n  margin-bottom: 50px;\n\n  background-color: ${({ theme }) => theme.colors.white};\n\n  color: ${({ theme }) => theme.colors.prymeryColor};\n\n  transition: background-color 250ms linear;\n\n  :hover,\n  :focus {\n    background-color: ${({ theme }) => theme.colors.prymeryColor};\n\n    transition: background-color 2250ms linear;\n\n    color: ${({ theme }) => theme.colors.white};\n\n    transition: color 250ms linear;\n  }\n`;\n","import { useState } from 'react';\nimport {\n  FormPhonebook,\n  FormInput,\n  FormLeable,\n  FormButtonSubmit,\n} from './Form.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsSelector } from 'redux/selectors';\nimport { addContactPost } from 'redux/operations';\nconst Form = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(contactsSelector);\n  const handleChange = evt => {\n    const { name, value } = evt.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n  const dispatch = useDispatch();\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const nameInputValue = evt.target.elements.name.value;\n    const numberInputValue = evt.target.elements.number.value;\n    const checkContact = contacts.find(\n      contact => contact.name === nameInputValue\n    );\n    if (checkContact) {\n      window.alert(`${nameInputValue} is already in contacts.`);\n      return;\n    }\n    const newContact = {\n      name: nameInputValue,\n      number: numberInputValue,\n    };\n    console.log(newContact);\n    dispatch(addContactPost(newContact));\n    reset();\n  };\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n  return (\n    <FormPhonebook autoComplete=\"off\" onSubmit={handleSubmit}>\n      <FormLeable htmlFor=\"name\">Name</FormLeable>\n      <FormInput\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        value={name}\n        onChange={handleChange}\n        id=\"name\"\n      />\n      <FormLeable htmlFor=\"number\">Phone</FormLeable>\n      <FormInput\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        value={number}\n        onChange={handleChange}\n        id=\"number\"\n      />\n      <FormButtonSubmit type=\"submit\">Add contact</FormButtonSubmit>\n    </FormPhonebook>\n  );\n};\nexport default Form;\n","import ConatctList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport Form from 'components/Form/Form';\n\nconst Contacts = () => {\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <Form />\n      <h2>Contacts</h2>\n      <Filter />\n      <ConatctList />\n    </>\n  );\n};\nexport default Contacts;\n"],"names":["ListContact","styled","ListContactItem","theme","colors","prymeryColor","ListContactInfo","ListRemoveBtn","white","contacts","useSelector","contactsSelector","filters","filterSelector","isLoad","selectIsLoading","dispatch","useDispatch","useEffect","fetchContacts","filtredListContact","filter","contact","name","toLocaleLowerCase","includes","map","number","type","onClick","deleteContact","id","Fiterlable","FilterInput","prymeryBgColor","accentColor","BlockLable","htmlFor","value","onChange","target","filtred","FormPhonebook","FormInput","FormLeable","FormButtonSubmit","useState","setName","setNumber","handleChange","evt","currentTarget","reset","autoComplete","onSubmit","preventDefault","nameInputValue","elements","numberInputValue","find","window","alert","newContact","console","log","addContactPost","pattern","title","required"],"sourceRoot":""}